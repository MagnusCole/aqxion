-- ==========================================
-- AUDITOR√çA COMPLETA DE BASE DE DATOS AQXION
-- Ejecutar en SQL Editor de Supabase Dashboard
-- ==========================================

-- ‚ö° REPORTE DE AUDITOR√çA
SELECT '========================================' as "AUDITOR√çA AQXION";
SELECT 'Fecha: ' || CURRENT_TIMESTAMP as "TIMESTAMP";
SELECT '========================================' as "SEPARADOR";

-- üìä 1. VERIFICAR TABLAS EXISTENTES
SELECT '1. VERIFICACI√ìN DE TABLAS' as "SECCI√ìN";
SELECT 
  schemaname,
  tablename,
  CASE 
    WHEN tablename IN ('user_profiles', 'leads', 'metrics', 'tasks', 'support_tickets') 
    THEN '‚úÖ REQUERIDA'
    WHEN tablename IN ('super_admins', 'users')
    THEN '‚úÖ EXISTENTE'
    ELSE '‚ùì ADICIONAL'
  END as status
FROM pg_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

-- üîí 2. VERIFICAR ROW LEVEL SECURITY
SELECT '2. VERIFICACI√ìN RLS (ROW LEVEL SECURITY)' as "SECCI√ìN";
SELECT 
  schemaname,
  tablename,
  CASE 
    WHEN rowsecurity THEN '‚úÖ RLS HABILITADO'
    ELSE '‚ùå RLS DESHABILITADO'
  END as rls_status
FROM pg_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

-- üë§ 3. VERIFICAR USUARIO LUIS@AQXION.COM
SELECT '3. VERIFICACI√ìN USUARIO PRINCIPAL' as "SECCI√ìN";

-- Verificar en auth.users
SELECT 
  'auth.users' as tabla,
  COUNT(*) as total_usuarios,
  COUNT(*) FILTER (WHERE email = 'luis@aqxion.com') as luis_existe
FROM auth.users;

-- Verificar en super_admins
SELECT 
  'super_admins' as tabla,
  COUNT(*) as total_super_admins,
  COUNT(*) FILTER (WHERE email = 'luis@aqxion.com') as luis_es_super_admin
FROM super_admins;

-- Verificar en user_profiles
SELECT 
  'user_profiles' as tabla,
  COUNT(*) as total_perfiles,
  COUNT(*) FILTER (WHERE email = 'luis@aqxion.com') as luis_tiene_perfil
FROM user_profiles;

-- üìà 4. CONTEO DE DATOS POR TABLA
SELECT '4. CONTEO DE DATOS' as "SECCI√ìN";

SELECT 'user_profiles' as tabla, COUNT(*) as registros FROM user_profiles
UNION ALL
SELECT 'leads' as tabla, COUNT(*) as registros FROM leads
UNION ALL
SELECT 'metrics' as tabla, COUNT(*) as registros FROM metrics
UNION ALL
SELECT 'tasks' as tabla, COUNT(*) as registros FROM tasks
UNION ALL
SELECT 'support_tickets' as tabla, COUNT(*) as registros FROM support_tickets
ORDER BY tabla;

-- üîç 5. VERIFICAR POL√çTICAS RLS
SELECT '5. VERIFICACI√ìN POL√çTICAS RLS' as "SECCI√ìN";
SELECT 
  schemaname,
  tablename,
  policyname,
  CASE 
    WHEN cmd = 'ALL' THEN '‚úÖ TODAS LAS OPERACIONES'
    WHEN cmd = 'SELECT' THEN 'üìñ SOLO LECTURA'
    WHEN cmd = 'INSERT' THEN '‚ûï SOLO INSERCI√ìN'
    WHEN cmd = 'UPDATE' THEN '‚úèÔ∏è SOLO ACTUALIZACI√ìN'
    WHEN cmd = 'DELETE' THEN 'üóëÔ∏è SOLO ELIMINACI√ìN'
  END as operaciones_permitidas
FROM pg_policies 
WHERE schemaname = 'public'
ORDER BY tablename, policyname;

-- üìä 6. VERIFICAR √çNDICES
SELECT '6. VERIFICACI√ìN √çNDICES' as "SECCI√ìN";
SELECT 
  schemaname,
  tablename,
  indexname,
  CASE 
    WHEN indexname LIKE 'idx_%' THEN '‚úÖ √çNDICE PERSONALIZADO'
    WHEN indexname LIKE '%_pkey' THEN 'üîë CLAVE PRIMARIA'
    WHEN indexname LIKE '%_key' THEN 'üîí CLAVE √öNICA'
    ELSE '‚ùì OTRO √çNDICE'
  END as tipo_indice
FROM pg_indexes 
WHERE schemaname = 'public'
ORDER BY tablename, indexname;

-- üîß 7. VERIFICAR FUNCIONES
SELECT '7. VERIFICACI√ìN FUNCIONES' as "SECCI√ìN";
SELECT 
  routine_name as nombre_funcion,
  routine_type as tipo,
  CASE 
    WHEN routine_name LIKE 'calculate_%' THEN 'üìä FUNCI√ìN DE C√ÅLCULO'
    WHEN routine_name LIKE 'update_%' THEN 'üîÑ FUNCI√ìN DE ACTUALIZACI√ìN'
    WHEN routine_name LIKE 'generate_%' THEN '‚ö° FUNCI√ìN GENERADORA'
    ELSE '‚ùì OTRA FUNCI√ìN'
  END as categoria
FROM information_schema.routines 
WHERE routine_schema = 'public'
AND routine_name NOT LIKE 'pg_%'
ORDER BY routine_name;

-- üéØ 8. VERIFICAR TRIGGERS
SELECT '8. VERIFICACI√ìN TRIGGERS' as "SECCI√ìN";
SELECT 
  trigger_name,
  event_object_table as tabla,
  action_timing as momento,
  event_manipulation as evento
FROM information_schema.triggers
WHERE trigger_schema = 'public'
ORDER BY event_object_table, trigger_name;

-- ‚ö†Ô∏è 9. PROBLEMAS POTENCIALES
SELECT '9. DIAGN√ìSTICO DE PROBLEMAS' as "SECCI√ìN";

-- Verificar tablas sin RLS
SELECT 
  '‚ùå TABLA SIN RLS: ' || tablename as problema
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename IN ('user_profiles', 'leads', 'metrics', 'tasks', 'support_tickets')
AND NOT rowsecurity;

-- üìã 10. RESUMEN EJECUTIVO
SELECT '10. RESUMEN EJECUTIVO' as "SECCI√ìN";
SELECT 
  'üìä Total de tablas p√∫blicas: ' || COUNT(*) as resumen
FROM pg_tables WHERE schemaname = 'public'
UNION ALL
SELECT 
  'üîí Tablas con RLS habilitado: ' || COUNT(*)
FROM pg_tables WHERE schemaname = 'public' AND rowsecurity = true
UNION ALL
SELECT 
  'üë§ Total usuarios en auth: ' || COUNT(*)
FROM auth.users
UNION ALL
SELECT 
  '‚≠ê Total super admins: ' || COUNT(*)
FROM super_admins
UNION ALL
SELECT 
  'üìù Total perfiles creados: ' || COUNT(*)
FROM user_profiles;

SELECT '========================================' as "FIN AUDITOR√çA";
SELECT 'Auditor√≠a completada exitosamente ‚úÖ' as "ESTADO";
